sudo: required
dist: trusty
os: linux
language: minimal
cache:
  directories:
  - depends/built
  - depends/sdk-sources
  - "$HOME/.ccache"
env:
  global:
  - MAKEJOBS=-j3
  - RUN_TESTS=false
  - CHECK_DOC=0
  - CHECK_LOGPRINT=0
  - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
  - CCACHE_SIZE=100M
  - CCACHE_TEMPDIR=/tmp/.ccache-temp
  - CCACHE_COMPRESS=1
  - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
  - SDK_URL=https://bitcoincore.org/depends-sources/sdks
  - WINEDEBUG=fixme-all
  matrix:
  - HOST=arm-linux-gnueabihf PACKAGES="g++-arm-linux-gnueabihf" CHECK_DOC=1 CHECK_LOGPRINT=1
    GOAL="deploy" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
  - HOST=i686-pc-linux-gnu PACKAGES="g++-multilib bc python3-zmq" DEP_OPTS="NO_QT=1"
    RUN_TESTS=true GOAL="deploy" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat
    --enable-reduce-exports LDFLAGS=-static-libstdc++" USE_SHELL="/bin/dash" PYZMQ=true
  - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PACKAGES="python3
    nsis g++-mingw-w64-x86-64 wine1.6 bc" RUN_TESTS=true GOAL="deploy" BITCOIN_CONFIG="--enable-reduce-exports"
  - HOST=x86_64-unknown-linux-gnu PACKAGES="bc python3-zmq" DEP_OPTS="NO_QT=1 NO_UPNP=1
    DEBUG=1" RUN_TESTS=true GOAL="deploy" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat
    --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER" PYZMQ=true
  - HOST=x86_64-apple-darwin11 PACKAGES="cmake imagemagick libcap-dev librsvg2-bin
    libz-dev libbz2-dev libtiff-tools python-dev" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports"
    OSX_SDK=10.11 GOAL="deploy"
  - HOST=i686-pc-linux-gnu PACKAGES="g++-multilib bc python3-zmq" DEP_OPTS="NO_QT=1"
    RUN_TESTS=true GOAL="deploy" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat
before_install:
- export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" |
  sed "s|::|:|g")
install:
- if [ "$PYZMQ" = "true" ]; then pip install pyzmq --user ; fi
- if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ;
  fi
- if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
- if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends
  --no-upgrade -qq $PACKAGES; fi
before_script:
- if [ "$CHECK_DOC" = 1 ]; then contrib/devtools/check-doc.py; fi
- if [ "$CHECK_LOGPRINT" = 1 ]; then contrib/devtools/logprint-scanner.py; fi
- unset CC; unset CXX
- mkdir -p depends/SDKs depends/sdk-sources
- if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then
  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz;
  fi
- if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then
  tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
- make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
script:
- export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
- if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
- OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
- BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST
  --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
- depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
- test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
- "./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || (
  cat config.log && false)"
- make distdir PACKAGE=bitcoin VERSION=$HOST
- cd bitcoin-$HOST
- "./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG ||
  ( cat config.log && false)"
- make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL
  V=1 ; false )
- export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
- if [ "$RUN_TESTS" = "true" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1;
  fi
after_script:
- echo $TRAVIS_COMMIT_RANGE
- echo $TRAVIS_COMMIT_LOG
before_deploy:
- git config --local user.name "TheBr4in"
- git config --local user.email "brain@doplr.com"
- git tag "$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)"
deploy:
  provider: releases
  api_key:
    secure: t0HKuDaQwVz/0Fw2JolC3qdp9qfKlVZYs5PRIwrpksnW1aSZ4SPe1hnNfAWvpO+wSLiOEARnW/AwYm39QToyyL2JdTdMJkMVK/N9YMR6lasYJP2b+rkRHBnmAQ8cRPBw1WiuhH2EjPcxLG84WNFUipy3KyZo4Va0BAQVPQE+ng4ADTw8+Zrn/6uztRF72UBmEogATRAtszdjOyY2rVPctKIwQpahkY+SyxAbmHCTzUyG4NvMqFI1Zhxwac8uqsBdJL8lXrmaQhqiiQ8hk6dVeyEHfyCpBKggyIcqoNJH9E8qctHsCKUDqrt3KkYDrAqQ+kbAgDZzpBoY0Ebfg4biTMOHdPzx5nXpaKMKLVk4DnjaBm6/SoXX0bQzo11Ilxj8EfdMofJav8TTdmfcSNa0px8VOEsf3Sr1SkdNhkE5cxn7abtlvwg7/5XpEEwd7+sMW3Q9SlGWPd8KLSN5FNa7bY4wYxECKJUv9SvMEOWc0Xqkji5m9dez4p+uSgfNjWxDWNIKNJnwaOG1s8fHSfUxFQn7pVZdkK0nZWe4tAhL5pFdYT4E3vqOuYJtt6T4EdGttorbHIHr+++MrWEDhY0ieil+vy7dZUoQLedYSdo6vfcVyecFIrR9nK6iuIAnKQOPxPZTWKE7l/E8b50XSOxcM54TZAxnRCFhunIqqh8BPFk=
  file: "/home/travis/build/DoplrCoin/Doplr/out/false/2.2-i686-w64-mingw32/bin/pivxd.exe"
  on:
    repo: DoplrCoin/Doplr
notifications:
  slack:
    secure: rfqVxE0zYI5JYDBJpyMhkVuSXLelzJKxcZsYFS+uQUsu1mNO7QDF2TzTsMqyJABDvd7cbzp00hAFyczqSlIweGGdN/6UqDYofhwimSj04xa/2ZAykovb46CugSVk3w+nNwa3Cr5xiBWMxbfTsuL1oiwtq2XpAdvbp3o+rtjoNyoOvN43WeuDuca9T1QmY5aI4RFWz199vW55uu2ba5O5JG5AgScqB+21YEpMLaJ54sbeIEShdgqKeOpv2QTlprzTkLBwXnrVwV6C8ujgFvb32y7IkqXNHYiRhghG7uBcNMPT1JquB2tBJpjuEU89IjSg6tNNVeyqvcD4dvBCixiq5IOl2M7Q/PLyEd6VCKldcYFp0GMBT0sQvEBgrxpnN7V8ygOHDF0dchnHr7Lrl7TvoKIO9omf7SjQdSgZRvn8WwzAEoBApnoVeglYwhtRQAPRfeg3C/4ME0zvJBiJYajdU3dv9Sg6t4GAyll4y4yII6if7NT21MzGA2/T7/RceyuhuTSr9vOTvd4g3jMFxJvN2JUibEkpngylho3QN+//+CSoTh1vlVyauZ4suHqYOS7Tzov2PxcBEPfoz27M8JkbZuplUD/BY3BymzFDMv3qzqIfZsvIchm9Xcfinj6ImqQ3JqDn1cu3qRXhJm2b8GZcsgzXCPIoJjs/z87mdcVab9o=
